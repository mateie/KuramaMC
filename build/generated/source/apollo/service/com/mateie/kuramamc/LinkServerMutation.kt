//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.6.1'.
//
package com.mateie.kuramamc

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Mutation
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.mateie.kuramamc.adapter.LinkServerMutation_ResponseAdapter
import com.mateie.kuramamc.adapter.LinkServerMutation_VariablesAdapter
import com.mateie.kuramamc.selections.LinkServerMutationSelections
import kotlin.String
import kotlin.Unit

public data class LinkServerMutation(
  public val code: String,
  public val ip: String,
) : Mutation<LinkServerMutation.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    LinkServerMutation_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = LinkServerMutation_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.mateie.kuramamc.type.Mutation.type
  )
  .selections(selections = LinkServerMutationSelections.__root)
  .build()

  @ApolloAdaptableWith(LinkServerMutation_ResponseAdapter.Data::class)
  public data class Data(
    public val linkServer: String,
  ) : Mutation.Data

  public companion object {
    public const val OPERATION_ID: String =
        "d84028b9938b7e8fcaa577f66dd3b03eb5789205ec99c7712d100b83fdd5fba1"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * mutation linkServer($code: String!, $ip: String!) {
     *   linkServer(code: $code, ip: $ip)
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "mutation linkServer(${'$'}code: String!, ${'$'}ip: String!) { linkServer(code: ${'$'}code, ip: ${'$'}ip) }"

    public const val OPERATION_NAME: String = "linkServer"
  }
}
