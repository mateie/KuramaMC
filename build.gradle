plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id "com.apollographql.apollo3" version "3.5.0"
}

group = 'com.mateie'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:plugin-annotations:1.2.3-SNAPSHOT'
    implementation 'org.jetbrains.kotlin:kotlin-script-runtime:1.7.10'
    implementation 'com.apollographql.apollo3:apollo-runtime:3.5.0'
    implementation 'com.github.shynixn.mccoroutine:mccoroutine-bukkit-api:2.4.0'
    implementation 'com.github.shynixn.mccoroutine:mccoroutine-bukkit-core:2.4.0'
    annotationProcessor 'org.spigotmc:plugin-annotations:1.2.3-SNAPSHOT'
}

apollo {
    packageName.set("com.mateie.kuramamc")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = '17'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '17'
}